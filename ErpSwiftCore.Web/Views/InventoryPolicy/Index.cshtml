@using ErpSwiftCore.Web.Enums
@using ErpSwiftCore.Web.Models.InventorySystemManagmentModels.InventoryPolicyModels
@model IEnumerable<InventoryPolicyDto>

@{
    Layout = "_Layout";
    ViewData["Title"] = "All Inventory Policies";
}

<section class="section">
    <!-- Top navigation card -->
    <div class="card mb-4">
        <div class="card-body d-flex justify-content-between align-items-center">
            <h5 class="card-title mb-0">@ViewData["Title"]</h5>
            <div class="btn-group">
                <a asp-action="Index" class="btn btn-outline-primary">All</a>
                <a asp-action="AutoReorder" class="btn btn-outline-primary">Auto Reorder</a>
                <a asp-action="BelowReorder" class="btn btn-outline-primary">Below Reorder</a>
                <a asp-action="AboveMax" class="btn btn-outline-primary">Above Max</a>
            </div>
        </div>
    </div>

    <!-- Bulk edit trigger -->
    <div class="mb-3">
        <button class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#bulkEditModal">
            <i class="bi bi-pencil-square"></i> Bulk Edit
        </button>
    </div>

    <!-- Policies table -->
    <div class="card">
        <div class="card-body p-0">
            <table class="table datatable table-bordered table-hover align-middle mb-0">
                <thead class="table-light text-center">
                    <tr>
                        <th>Inventory ID</th>
                        <th>Policy Type</th>
                        <th>Reorder Level</th>
                        <th>Max Stock Level</th>
                        <th>Auto Reorder?</th>
                        <th>Auto Qty</th>
                        <th>Current Stock</th>
                        <th style="min-width:300px;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (!Model.Any())
                    {
                        <tr>
                            <td colspan="8" class="text-center text-muted">No policies to display.</td>
                        </tr>
                    }
                    else
                    {
                        foreach (var p in Model)
                        {
                            <tr>
                                <td>@p.InventoryID</td>
                                <td>@p.PolicyType</td>
                                <td class="text-end">@p.ReorderLevel</td>
                                <td class="text-end">@p.MaxStockLevel</td>
                                <td class="text-center">
                                    @if (p.AutoReorderEnabled)
                                    {
                                        <i class="bi bi-check-circle-fill text-success"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-x-circle-fill text-danger"></i>
                                    }
                                </td>
                                <td class="text-end">@p.AutoReorderQuantity?.ToString() ?? "—"</td>
                                <td class="text-end">@p.CurrentStock?.ToString() ?? "—"</td>
                                <td>
                                    <div class="d-flex flex-wrap gap-2 align-items-center">
                                        <!-- Details/Edit -->
                                        <a asp-action="Details" asp-route-id="@p.ID" class="btn btn-info btn-sm" title="View">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@p.ID" class="btn btn-warning btn-sm" title="Edit">
                                            <i class="bi bi-pencil-square"></i>
                                        </a>

                                        <!-- Enable/Disable Auto Reorder -->
                                        @if (p.AutoReorderEnabled)
                                        {
                                            <form asp-action="DisableAutoReorder" method="post" class="d-inline">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="InventoryId" value="@p.InventoryID" />
                                                <button type="submit" class="btn btn-secondary btn-sm" title="Disable Auto">
                                                    <i class="bi bi-bell-slash"></i>
                                                </button>
                                            </form>
                                        }
                                        else
                                        {
                                            <form asp-action="EnableAutoReorder" method="post" class="d-inline">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="InventoryId" value="@p.InventoryID" />
                                                <input type="hidden" name="ReorderQuantity" value="@(p.AutoReorderQuantity ?? p.ReorderLevel * 2)" />
                                                <button type="submit" class="btn btn-success btn-sm" title="Enable Auto">
                                                    <i class="bi bi-bell"></i>
                                                </button>
                                            </form>
                                        }

                                        <!-- Inline update Reorder Level -->
                                        <form asp-action="UpdateReorderLevel" method="post" class="d-inline needs-validation" novalidate style="display:inline-flex; align-items:center;">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="PolicyId" value="@p.ID" />
                                            <input name="ReorderLevel" type="number" value="@p.ReorderLevel"
                                                   class="form-control form-control-sm me-1" style="width:60px" min="0" required />
                                            <button type="submit" class="btn btn-outline-primary btn-sm" title="Update Reorder">
                                                <i class="bi bi-arrow-clockwise"></i>
                                            </button>
                                            <div class="invalid-feedback">Required</div>
                                        </form>

                                        <!-- Inline update Max Stock Level -->
                                        <form asp-action="UpdateMaxStockLevel" method="post" class="d-inline needs-validation" novalidate style="display:inline-flex; align-items:center;">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="PolicyId" value="@p.ID" />
                                            <input name="MaxStockLevel" type="number" value="@p.MaxStockLevel"
                                                   class="form-control form-control-sm me-1" style="width:60px" min="0" required />
                                            <button type="submit" class="btn btn-outline-primary btn-sm" title="Update Max Stock">
                                                <i class="bi bi-arrow-up-circle"></i>
                                            </button>
                                            <div class="invalid-feedback">Required</div>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>

<!-- Bulk-edit Modal -->
<div class="modal fade" id="bulkEditModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form asp-action="UpdateRange" method="post" class="needs-validation" novalidate>
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title">Bulk Update Policies</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body p-0">
                    <table class="table mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Inventory ID</th>
                                <th>Reorder Level</th>
                                <th>Max Stock Level</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Count(); i++)
                            {
                                var p = Model.ElementAt(i);
                                <tr>
                                    <td>
                                        @p.InventoryID
                                        <input type="hidden" name="Policies[@i].ID" value="@p.ID" />
                                    </td>
                                    <td>
                                        <input name="Policies[@i].ReorderLevel" type="number"
                                               value="@p.ReorderLevel" class="form-control form-control-sm" min="0" required />
                                        <div class="invalid-feedback">Required</div>
                                    </td>
                                    <td>
                                        <input name="Policies[@i].MaxStockLevel" type="number"
                                               value="@p.MaxStockLevel" class="form-control form-control-sm" min="0" required />
                                        <div class="invalid-feedback">Required</div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save All</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Initialize DataTable
        document.addEventListener('DOMContentLoaded', function () {
            new simpleDatatables.DataTable('.datatable');
        });

        // Bootstrap validation for inline and bulk forms
        (function () {
            'use strict';
            var forms = document.querySelectorAll('.needs-validation');
            Array.prototype.forEach.call(forms, function (form) {
                form.addEventListener('submit', function (e) {
                    if (!form.checkValidity()) {
                        e.preventDefault();
                        e.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();
    </script>
}
