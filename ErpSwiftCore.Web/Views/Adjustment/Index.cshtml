@using ErpSwiftCore.Web.Models.InventorySystemManagmentModels.AdjustmentModels
@model IEnumerable<InventoryAdjustmentDto>
@{
    Layout = "_Layout";
    ViewData["Title"] = "Inventory Adjustments";
}

<section class="section">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@ViewData["Title"]</h5>
                    <p class="card-text mb-4">
                        Manage inventory adjustments — view, create, edit, or delete adjustment records.
                    </p>
                    <div class="mb-3 d-flex flex-wrap gap-2">
                        <a asp-action="Upsert" class="btn btn-primary">
                            <i class="bi bi-plus-lg"></i> New Adjustment
                        </a>
                        <button id="btnDeleteAll" class="btn btn-danger">
                            <i class="bi bi-trash"></i> Delete All
                        </button>
                    </div>
                    <table class="table datatable table-bordered table-hover align-middle">
                        <thead class="table-light text-center">
                            <tr>
                                <th style="width:40px;">
                                    <input type="checkbox" id="selectAll" />
                                </th>
                                <th>Product</th>
                                <th>Warehouse</th>
                                <th>Quantity</th>
                                <th>Reason</th>
                                <th>Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (!Model.Any())
                            {
                                <tr>
                                    <td colspan="7" class="text-center text-muted">No adjustments to display.</td>
                                </tr>
                            }
                            else
                            {
                                foreach (var adj in Model)
                                {
                                    <tr>
                                        <td class="text-center">
                                            <input type="checkbox" class="select-item" value="@adj.ID" />
                                        </td>
                                        <td>@adj.Product?.Name</td>
                                        <td>@adj.Warehouse?.Name</td>
                                        <td>@adj.QuantityChanged</td>
                                        <td>@adj.Reason</td>
                                        <td>@adj.AdjustmentDate.ToString("yyyy-MM-dd HH:mm")</td>
                                        <td class="text-center">
                                            <div class="btn-group btn-group-sm" role="group">
                                                <a asp-action="Details" asp-route-id="@adj.ID" class="btn btn-info" title="View">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                                <a asp-action="Upsert" asp-route-id="@adj.ID" class="btn btn-warning" title="Edit">
                                                    <i class="bi bi-pencil-square"></i>
                                                </a>
                                                <form asp-action="Delete" asp-route-id="@adj.ID" method="post" class="d-inline delete-form">
                                                    @Html.AntiForgeryToken()
                                                    <button type="button" class="btn btn-danger btn-delete" title="Delete">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </form>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        $(document).ready(function () {
            new simpleDatatables.DataTable('.datatable');
            $('#selectAll').on('change', function () {
                $('.select-item').prop('checked', this.checked);
            });
            $(document).on('click', '.btn-delete', function (e) {
                e.preventDefault();
                var form = $(this).closest('.delete-form');
                Swal.fire({
                    title: 'Delete Adjustment',
                    text: 'Are you sure you want to permanently delete this adjustment?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete it',
                    cancelButtonText: 'Cancel'
                }).then(result => {
                    if (result.isConfirmed) form.submit();
                });
            });
            $('#btnDeleteAll').on('click', function () {
                var ids = $('.select-item:checked').map(function () { return this.value; }).get();
                if (!ids.length) {
                    toastr.warning('No adjustments selected for deletion.');
                    return;
                }
                Swal.fire({
                    title: 'Delete Selected',
                    text: 'Are you sure you want to delete the selected adjustments?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete',
                    cancelButtonText: 'Cancel'
                }).then(result => {
                    if (result.isConfirmed) {
                        $.post('@Url.Action("DeleteRange")', {
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
                            ids: ids
                        }).done(() => location.reload());
                    }
                });
            });
        });
    </script>
}
